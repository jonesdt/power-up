---
#If a firewall is enabled, the following default ports must be granted access on all management hosts for IBM Spectrum Conductor Deep Learning Impact: 9243, 9280, 5000, 5001, 27017, and 6379. If you change these ports after installation, make sure to update firewall rules accordingly.
#

- name: Include vars of envs_spectrum_conductor_dli.yml into the 'ports' variable
  include_vars:
    file: envs_spectrum_conductor_dli.yml
    name: ports

- name: DEBUG - List imported variables
  debug:
    msg: "{{ ports }}"
    
- name: Check status of firewall
  command: "firewall-cmd --state"
  register: host_firewall_status
  ignore_errors: yes
  become: yes

- name: List all host firewall data
  command: "firewall-cmd --list-services"
  when: host_firewall_status.stderr != 'not running'
  register: host_firewall_data
  become: yes

- name: DEBUG - Checking firewall_data stdout
  debug:
    msg: "{{ host_firewall_data.stdout }}"
  when: host_firewall_status.stderr != 'not running'

- name: DEBUG - Checking firewall_data for http service enabled
  debug:
    msg: "{{ host_firewall_status.stdout.find('http') }}"
  when: host_firewall_status.stderr != 'not running'  

- name: Print success status of host firewall
  command: echo "Firewall Exists and http enabled"
  when: host_firewall_status.stdout.find('http') != -1

- name: Print fail status if firewall not enbaled
  command: echo "WARNING - Firewall Not Enabled"
  when: host_firewall_status.stderr == 'not running'

- name: List ports status
  command: "firewall-cmd --list-ports"
  when: host_firewall_status.stderr != 'not running'
  register: current_available_ports
  become: yes
  
- name: DEBUG - list ports status 
  debug:
    msg: "{{ current_available_ports.stdout }}"
  when: host_firewall_status.stderr != 'not running'

- name: Check all port numbers are accessible from hosts
  wait_for:
    port: "{{ item }}"
    state: started         # Port should be open
    delay: 0               # No wait before first check (sec)
    timeout: 3             # Stop checking after timeout (sec)
  when: host_firewall_status.stdout == 'running'
  with_items:
     - "{{ ports.DLI_DLPD_REST_PORT }}"
     - "{{ ports.DLI_DLPD_REST_PORT_SSL_NOT_ENABLED }}"
     - "{{ ports.DLI_INSIGHTS_MONITOR_PORT }}"
     - "{{ ports.DLI_INSIGHTS_OPTIMIZER_PORT }}"
     - "{{ ports.DLI_MONGODB_PORT }}"
     - "{{ ports.DLI_REDIS_PORT }}"
  register: current_port_status      

- name: DEBUG - Report port status information
  debug:
    msg: "{{ current_port_status }}"
  when: host_firewall_status.stdout == 'running'
    
#- name: Open Ports for Spectrum Conductor - If firewall is enabled
#  firewalld:
#    port: "{{ item }}"
#    permanent: true
#    state: enabled
#    immediate: true
#  with_items:
#     - "{{ ports.DLI_DLPD_REST_PORT }}/tcp"
#     - "{{ ports.DLI_DLPD_REST_PORT_SSL_NOT_ENABLED }}/tcp"
#     - "{{ ports.DLI_INSIGHTS_MONITOR_PORT }}/tcp"
#     - "{{ ports.DLI_INSIGHTS_OPTIMIZER_PORT }}/tcp"
#     - "{{ ports.DLI_MONGODB_PORT }}/tcp"
#     - "{{ ports.DLI_REDIS_PORT }}/tcp"
#  when: current_port_status.stdout.find('failed') != -1
#  become: yes
#  register: new_port_stat
#
#- name: Debug - Open Ports for Spectrum Conductor
#  debug:
#    msg: "{{ new_port_stat }}"
